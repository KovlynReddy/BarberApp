#pragma checksum "C:\Users\User\OneDrive\Documents\Projects\BarberApp\BarberWebApp\Views\Barber\Suggested.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6fb7091a44c3f024cc1fbe6d9b6d38ed76ec5b40"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Barber_Suggested), @"mvc.1.0.view", @"/Views/Barber/Suggested.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\User\OneDrive\Documents\Projects\BarberApp\BarberWebApp\Views\_ViewImports.cshtml"
using BarberWebApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\User\OneDrive\Documents\Projects\BarberApp\BarberWebApp\Views\_ViewImports.cshtml"
using BarberWebApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6fb7091a44c3f024cc1fbe6d9b6d38ed76ec5b40", @"/Views/Barber/Suggested.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"31dacd10e601cc4500006addedc05b0dd15de824", @"/Views/_ViewImports.cshtml")]
    public class Views_Barber_Suggested : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<BarberAppDLL.Models.DomainModel.Barber>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
    <div id=""map"" style=""width:100%;height:400px;""></div>



    <script type=""text/javascript"">

        $(document).ready(function () {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(getPosition);
            } else {
                console.log(""Geolocation is not supported by this browser."");
            }

            var x = String(position.coords.latitude);
            var y = String(position.coords.longitude);
            console.log(x, y);

            //$.ajax({
            //    type: ""POST"",
            //    url: ""https://localhost:44388/Barber/Suggested"",
            //    data: {
            //        ""slat"": x,
            //        ""slon"": y
            //    },
            //    success: function (tekst) {
            //        console.log(""successs"", tekst);
            //    },
            //    error: function (request, error) {
            //        console.log(""ERROR:"" + error);
            //    }
      ");
            WriteLiteral(@"      //});

            //$.ajax({
            //    type: ""GET"",
            //    url: ""https://localhost:44388/Barber/DisplaySuggested"",
            //    data: {
            //        ""slat"": x,
            //        ""slon"": y
            //    },
            //    success: function (tekst) {
            //        console.log(""successs"", tekst);
            //    },
            //    error: function (request, error) {
            //        console.log(""ERROR:"" + error);
            //    }
            //});

        });

        function getPosition(position) {
            console.log(position);
            var x = String(position.coords.latitude);
            var y = String(position.coords.longitude);
            console.log(x, y);

            $.ajax({
                type: ""GET"",
                url: ""https://localhost:44388/Barber/DisplaySuggested"",
                data: {
                    ""slat"": x,
                    ""slon"": y
                },
                s");
            WriteLiteral(@"uccess: function (tekst) {
                    console.log(""successs"", tekst);
                    document.getElementById('map').innerHTML = tekst;

                    document.open();
                    document.write(tekst);
                    document.close();

                },
                error: function (request, error) {
                    console.log(""ERROR:"" + error);
                }
            });

            //$.ajax({
            //    type: ""POST"",
            //    url: ""https://localhost:44388/Barber/Suggested"",
            //    data: {
            //        ""slat"": x,
            //        ""slon"": y
            //    },
            //    success: function (tekst) {
            //        console.log(""successs"");
            //    },
            //    error: function (request, error) {
            //        console.log(""ERROR:"" + error);
            //    }
            //});
        }
    </script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<BarberAppDLL.Models.DomainModel.Barber>> Html { get; private set; }
    }
}
#pragma warning restore 1591
